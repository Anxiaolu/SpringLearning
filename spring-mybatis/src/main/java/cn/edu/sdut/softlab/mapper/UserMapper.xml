<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.sdut.softlab.dao.UserMapper">
    <resultMap id="BaseResultMap" type="cn.edu.sdut.soflab.model.User" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="nickname" property="nickname" jdbcType="VARCHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="pswd" property="pswd" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
        <result column="status" property="status" jdbcType="BIGINT" />
    </resultMap>
    <sql id="Base_Column_List">
        id,nickname,email,pswd,create_time,last_login_time,status
    </sql>
    <select id="findAll" requestMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from u_user
    </select>
   
    <select id="selectRoleByUserId" resultType="cn.edu.sdut.softlab.model.Role">
        select      r.id,r.name,r.type,
                    u.id 
        from        u_role r , u_user u 
        left join   u_user_role uur on uur.id = r.id
        left join   (select id from u_user where id=#{id,jdbcType=BIGINT}) u on u.id = uur.id
        group by    r.id
    </select>
   
    <!--登录验证-->
    <select id="login" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        form u_user
        where email = #{email,jdbcType=VARCHAR} and pswd = #{pswd,jdbcType=VARCHAR}
    </select>
    
    <!-- 根据邮箱|帐号查询 -->
    <select id="findUserByEmail" resultMap="BaseResultMap" >
        select 
        <include refid="Base_Column_List" />
        from u_user
        where email = #{email,jdbcType=VARCHAR} 
    </select>
    
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select 
        <include refid="Base_Column_List" />
        from u_user
        where id = #{id,jdbcType=BIGINT}
    </select>
    
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from u_user
        where id = #{id,jdbcType=BIGINT}
    </delete>
    
    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="cn.edu.sdut.softlab.model.User" >
        insert into u_user (id, nickname, email, 
        pswd, create_time, last_login_time,status
        )
        values (#{id,jdbcType=BIGINT}, #{nickname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
        #{pswd,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{lastLoginTime,jdbcType=TIMESTAMP},#{status,jdbcType=BIGINT}
        )
    </insert>
    
    <update id="updateByPrimaryKeySelective" parameterType="cn.edu.sdut.softlab.model.User" >
        update u_user
        <set >
            <if test="nickname != null" >
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="email != null" >
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="pswd != null" >
                pswd = #{pswd,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastLoginTime != null" >
                last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null" >
                status = #{status,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
  
    <update id="updateByPrimaryKey" parameterType="cn.edu.sdut.softlab.model.User" >
        update u_user
        set nickname = #{nickname,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        pswd = #{pswd,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
        status = #{status,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>
